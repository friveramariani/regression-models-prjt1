g <- g + layer("area",mapping = aes(x=if else(x>qnorm(.95,sd=2), x, NA)), geom_path=list(fill="red",alpha=.5)))
g <- g + layer("area",mapping = aes(x= ifelse(x>qnorm(.95,sd=2), x, NA)), geom_path=list(fill="red",alpha=.5)))
qt (.95, 15)
qt(.975,15)?
qt(.975,15)
qt(.25,15)
qt(.025,15)
library (UsingR)
data("father.son")
dim(father.son)
t.test(father.son$sheight-father.son$fheight)
t.test(father.son$sheight-father.son$fheight, paired = TRUE)
t.test(father.son$sheight, father.son$fheight, paired = TRUE)
11.7885 * sd(father.son$sheight-father.son$fheight)/sqrt(1078)
swirl()
library (swirl)
swirl()
data("women")
dim (women)
head (women)
plot(heigh ~ weight, women)
plot(height ~ weight, women)
cor(women$height, women$weight)
cor(women$height, women$weight, confint(women, level = 0.95))
baseline <- c(140, 138, 150, 148, 135)
week2 <- c(132, 135, 151, 146, 130)
t.test(week2, baseline, alternative = "two.sided", paired = FALSE)
t.test(week2, baseline, alternative = "two.sided", paired = TRUE)
t.test(week2 - baseline, alternative = "two.side")
t.test(week2, baseline, alternative = "less", paired = TRUE)
1100 + c(-1, 1) * qt(0.975, 8) * 30/sqrt(9)
pbinom(2, 4, 0.5, lower.tail = FALSE)
pbinom(2, 4, 0.5, lower.tail = FALSE)
ppois (10, 0.01, * 1787)
ppois (10, 0.01 * 1787)
binom.test(2, n=33, p=2/33)$conf.int
binom.test(1, n=33, p=1/33)$conf.int
binom.test(6, n=33, p=6/33)$conf.int
binom.test(8, n=33, p=8/33)$conf.int
binom.test(29, n=33, p=29/33)$conf.int
binom.test(12, n=33, p=1/33)$conf.int
binom.test(32, n=33, p=32/33)$conf.int
2/33
1/33
6/33
8/33
29/33
1/33
32/33
x <- (0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm (x ~ y)
fit <- lm (x ~ y)
summary(fit)
resid(fit)
residual <- resid(fit)
residual
yhat <-predict(fit)
max (abs(residual - (y - yhat)))
summary (residual)
sd (residual)
data("mtcars")
head (mtcards)
head (mtcars)
lm (data = mtcars, mpg ~ wt)$confint
lm (data = mtcars, mpg ~ wt)
lm (data = mtcars, mpg ~ wt)$confint
lm (data = mtcars, mpg ~ wt)$confidence.int
confint(lm (data = mtcars, mpg ~ wt))
summary(lm (data = mtcars, mpg ~ wt))
37.28 + (-5.3445 * 100)
37.28 + (-5.3445 * 1)
37.28 + (-5.3445 * 2)
37.28 + (-5.3445 * 3)$confint
confint(37.28 + (-5.3445 * 3))
twoton <-  c(2)
summary (predict(fit, newdata = data.frame(wt=twoton)))
confint(predict(fit, newdata = data.frame(wt=twoton)))
newx <- c(2, 3, 4)
confint(predict(fit, newdata = data.frame(wt=newx)))
predict(fit, newdata = data.frame(wt=newx)))
predict(fit, newdata = data.frame(wt=newx))
summary(fit)$sigma
sd(summary(fit)$sigma)
37.28 + (-5.3445 * 3)
37.28 + (-5.3445 * 2)
.23/.6
summary (fit)$sigma
fit <lm(mpg ~ wt, data = mtcars)
fit <-lm(mpg ~ wt, data = mtcars)
predict (fit, newdata = data.frame(wt=2), interval="prediction")
predict (fit, newdata = data.frame(wt=3), interval="prediction")
predict (fit, interval="prediction")
mean(predict (fit, interval="prediction"))
swirl()
library (swirl)
swirl()
plot (child~parent, galton)
plot (jitter (child,4) ~ parent, galton)
regrline <-lm (child ~ parent, galton)
abline (lwd=3, col="red")
abline (regrline, lwd=3, col="red")
summary (regrline)
fit <- lm (child ~ parent, galton)
c
summary (fit)
mean (fit$residuals)
cov(fit$residuals, galton$parent)
ol.ic <- fit$coefficients [1]
ol.ic <- fit$coef [1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
skip
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(child$galton)
skip()
varRes <- var(fit$residuals)
skip()
all.equal(varChild, sum(varRes, varEst))
all.equal(varChild,varEst+varRes)
lm (accel ~ mag + dist, attenu)
efit <- lm(accel ~ mag+dist, attenu)
skip()
skip()
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm (gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, data=galton)
sum(fit$residuals)/928-2
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean (galton$child)
skip()
skip()
1 - sRes/sTot
summary(fit)$r.squared
cor ((galton$child, galton$parent)^2)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm (child ~ ones + parent -1, galton)
lm (child ~ parent, galton)
lm (child ~ 1, galton)
head (trees)
fit <- lm (Girth, + Height + Constant -1, trees)
fit <- lm (Volume ~ Girth, + Height + Constant -1, trees)
skip()
trees <- eliminate ("Girth", trees)
trees2 <- eliminate("Girth", trees)
skip()
skip()
swirl()
ones <- rep (1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton
)
head (trees)
skip()
trees2 <- eliminate("Girth", trees)
head (trees2)
fit2 <-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
Ganoderma_allergen <- read.csv("C:/Users/Felix/Dropbox/Scientific/Mentoring/Frances Vila/Western blots-Group 1.csv")
dim(Ganoderma_allergen)
library (dplyr)
Ganoderma.ELISA.WB <- select(Ganoderma_allergen, ELISA.OD:X81.Kda)
## Convert Non-Reactive = 0
Ganoderma.ELISA.WB$X19.Kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X19.Kda)
Ganoderma.ELISA.WB$X24.Kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X24.Kda)
Ganoderma.ELISA.WB$X33.Kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X33.Kda)
Ganoderma.ELISA.WB$X45.kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X45.kda)
Ganoderma.ELISA.WB$X56.kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X56.kda)
Ganoderma.ELISA.WB$X75.Kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X75.Kda)
Ganoderma.ELISA.WB$X81.Kda <- gsub("^Non-Reactive$", "0", Ganoderma.ELISA.WB$X81.Kda)
## Convert Reactive = 1
Ganoderma.ELISA.WB$X19.Kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X19.Kda)
Ganoderma.ELISA.WB$X24.Kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X24.Kda)
Ganoderma.ELISA.WB$X33.Kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X33.Kda)
Ganoderma.ELISA.WB$X45.kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X45.kda)
Ganoderma.ELISA.WB$X56.kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X56.kda)
Ganoderma.ELISA.WB$X75.Kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X75.Kda)
Ganoderma.ELISA.WB$X81.Kda <- gsub("^Reactive$", "1", Ganoderma.ELISA.WB$X81.Kda)
Ganoderma.ELISA.WB$X19.Kda <- as.numeric (Ganoderma.ELISA.WB$X19.Kda)
Ganoderma.ELISA.WB$X24.Kda <- as.numeric (Ganoderma.ELISA.WB$X24.Kda)
Ganoderma.ELISA.WB$X33.Kda <- as.numeric (Ganoderma.ELISA.WB$X33.Kda)
Ganoderma.ELISA.WB$X45.kda <- as.numeric (Ganoderma.ELISA.WB$X45.kda)
Ganoderma.ELISA.WB$X56.kda <- as.numeric (Ganoderma.ELISA.WB$X56.kda)
Ganoderma.ELISA.WB$X75.Kda <- as.numeric (Ganoderma.ELISA.WB$X75.Kda)
Ganoderma.ELISA.WB$X81.Kda <- as.numeric (Ganoderma.ELISA.WB$X81.Kda)
Ganoderma.ELISA.WB <- mutate (Ganoderma.ELISA.WB, Half_reactive = Sum.Reactives / 2)
summary (select(Ganoderma_allergen, X19.Kda:X81.Kda))
Ganoderma.ELISA.WB <- mutate(Ganoderma.ELISA.WB, Sum.Reactives = X19.Kda + X24.Kda +  X33.Kda + X45.kda + X56.kda + X75.Kda + X81.Kda)
Ganoderma.ELISA.WB <- mutate (Ganoderma.ELISA.WB, Half_reactive = Sum.Reactives / 2)
names(Ganoderma.ELISA.WB)
Ganoderma.ELISA.WB <- mutate (Ganoderma.ELISA.WB, Reactivity = ifelse (Sum.Reactives == 0, 0, ifelse (Sum.Reactives !=0, 1))
)
Ganoderma.ELISA.WB <- mutate (Ganoderma.ELISA.WB, Reactivity = ifelse (Sum.Reactives == 0, 0, ifelse (Sum.Reactives !=0, 1, 1))
)
names(Ganoderma.ELISA.WB)
summary (Ganoderma.ELISA.WB$Reactivity)
hist(Ganoderma.ELISA.WB$Reactivity)
ist(Ganoderma.ELISA.WB$Sum.Reactives, ylim = c(0, 20), xlab = "Sum of Reactive Western Blot bands per Serum Sample", main=NULL)
hist(Ganoderma.ELISA.WB$Sum.Reactives, ylim = c(0, 20), xlab = "Sum of Reactive Western Blot bands per Serum Sample", main=NULL)
plot(Ganoderma.ELISA.WB$Sum.Reactives, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Total of Reactive Western Blot Bands per Serum", ylab = "ELISA OD", ylim = c(0.1, 1.0))
boxplot(Ganoderma.ELISA.WB$Sum.Reactives, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Total of Reactive Western Blot Bands per Serum", ylab = "ELISA OD", ylim = c(0.1, 1.0))
abline(h=0.525)
summary (Ganoderma.ELISA.WB$ELISA.OD)
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
abline(0.5157)
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
Ganoderma.ELISA.WB$Reactivity <- as.factor (Ganoderma.ELISA.WB$Reactivity)
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
abline(h=0.5157)
abline(h=0.5157, "mean")
abline(h=0.5157, hlab="mean")
abline(h=0.5157, col="red")
abline(h=0.5157, color="red")
abline(h=0.5157, colour="red")
abline(h=0.5157, colour=c("red"))
abline(h=0.5157, col = "lightgray")
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0))
points(means(Ganoderma.ELISA.WB$ELISA.OD), col="red",pch=18)
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0), points(means(Ganoderma.ELISA.WB$ELISA.OD), col="red",pch=18))
plot (Ganoderma.ELISA.WB$Reactivity, Ganoderma.ELISA.WB$ELISA.OD, xlab = "Western Blot Reactivity (1 = Reactive, 0 = Non-Reactive)", ylab = "ELISA OD", ylim = c(0.1, 1.0), points(means(Ganoderma.ELISA.WB$ELISA.OD, col="red",pch=18)))
abline(h=0.5157)
abline(h=mean (Ganoderma.ELISA.WB$ELISA.OD), col="red")
t.test (ELISA.OD ~ Reactivity, data= Ganoderma.ELISA.WB)
library (pander)
pander (t.test (ELISA.OD ~ Reactivity, data= Ganoderma.ELISA.WB))
pander (t.test (ELISA.OD ~ Reactivity, data= Ganoderma.ELISA.WB)$conf.int)
requiere (datasets)
require (datasets)
require (datasets); data(swiss)
g = ggpairs (swiis, lower = list (continous = "smooth"), params=c(method="loses"))
require (datasets); data(swiss)
library (ggplot2)
g = ggpairs (swiis, lower = list (continous = "smooth"), params=c(method="loses"))
library (ggplot2)
g = ggpairs (swiis, lower = list (continous = "smooth"), params=c(method="loses"))
require (datasets); data(swiss); require (ggplot2)
g = ggpairs (swiis, lower = list (continous = "smooth"), params=c(method="loses"))
g = ggpairs (swiis, lower = list (continous = "smooth"), params=c(method="loess"))
g = ggplot (swiis, lower = list (continous = "smooth"), params=c(method="loess"))
g = ggplot (swiss, lower = list (continous = "smooth"), params=c(method="loess"))
g
g = qplot (swiss, lower = list (continous = "smooth"), params=c(method="loess"))
library (GGally)
install.packages("GGally")
library (GGally)
g = ggpairs (swiss, lower = list (continous = "smooth"), params=c(method="loess"))
summary (lm(Fertility ~ ., data = swiss))$coefficients
summary (lm(Fertility ~ ., data = swiss))
library (pander)
pander(summary (lm(Fertility ~ ., data = swiss)))
pander(summary (lm(Fertility ~ Agriculture, data = swiss)))$coefficients
dat = data.frame(y=y, x1 = x1, x2=x2, ey=resid(lm(y~x2), ex1=resid(x1 ~x2)))
dat = data.frame(y = y, x1 = x1, x2 = x2, ey=resid(lm(y~x2), ex1=resid(x1 ~x2)))
z <- swiss$Agriculture + swiss$Education
pander (lm(Fertility ~ . + z, data=swiss))
lm(Fertility ~ . + z, data=swiss)
require (datasets); require (InsectSpras); require (stats)
require (datasets); require (InsectSprays); require (stats)
require (datasets); data (InsectSprays); require (stats)
g = ggplot (InsectSprays, aes(y=count, x=spray, fill=spray))
g = g + geom_violin(colour="black", size=2)
g = g + xlab("Type of spray") + ylab ("Insect count")
g
summary (lm(count ~ spray, data = InsectSprays))$coef
summary (lm(count ~ I(1(spray=="B")) + I(1(spray=="C")) + I(1(spray=="D")) + I(1(spray=="E")) + I(1(spray=="F")), data = InsectSprays))$coefficient
summary (lm(count ~ I(1(spray=="B")) + I(1(spray=="C")) + I(1(spray=="D")) + I(1(spray=="E")) + I(1(spray=="F")), data = InsectSprays))$coef
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), data = InsectSprays))$coefficient
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), data = InsectSprays))
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), + I(1*(spray=="A"), data = InsectSprays))$coefficient
)
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), + I(1*(spray=="A"), data = InsectSprays))$coefficient
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), + I(1*(spray=="A"), data = InsectSprays))$coefficient)
summary (lm(count ~ I(1*(spray=="B")) + I(1*(spray=="C")) + I(1*(spray=="D")) + I(1*(spray=="E")) + I(1*(spray=="F")), + I(1*(spray=="A"), data = InsectSprays))$coefficient
)
summary (lm(count ~ spray - 1, data = InsectSprays))$coef
library (dplyr)
summarise(group_by(InsectSprays, spray), mn = mean(count))
summary (lm(count ~ spray - 1, data = InsectSprays))$coef
summary (lm(count ~ spray, data = InsectSprays))$coef
spray2 <- relevel(InsectSprays$spray, "C")
summary (lm(count ~ spray2, data = InsectSprays))$coef
swiss = mutate (swiss, CatholicBin = 1 * (Catholic > 50))
head (swiss)
fit = lm (Fertility ~ Agriculture, data=swiss)
g1 = g
g1 = g1 + geom_abline(intercept=coef(fit)[1], slope=coef(fit)[2], size=2)
g1
plot (swiss$Fertility ~ factor(swiss$CatholicBin))
plot (swiss$Fertility ~ (swiss$CatholicBin))
plot (swiss$Fertility ~ factor(swiss$CatholicBin))
library (rgl)
plot3d (swiss$Fertility ~ factor(swiss$CatholicBin))
plot3d (swiss$Fertility, factor(swiss$CatholicBin), z)
plot3d (swiss$Fertility, factor(swiss$CatholicBin), z)
par(mfrow=2,2)
par(mfrow=c(2,2))
fit <- lm(Fertility ~ ., data =swiss); plot(fit)
?influence.measures
n <-100; x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot (x, y, frame=FALSe, cex=2, pch=21, bg="lightblue", col="black")
plot (x, y, frame=FALSE, cex=2, pch=21, bg="lightblue", col="black")
abline (lm(y~x))
fit <- lm (y~x)
round(dfbetas(fit)[1:10, 2], 3)
round(dfbetas(fit)[1:10, 2], 2)
round(dfbetas(fit)[1:10, 1], 2)
round(dfbetas(fit)[1:10, 5], 2)
round(dfbetas(fit)[1:10, 4], 2)
round(dfbetas(fit)[1:10, 2], 3)
pairs(swiss)
data ("mtcars")
pairs(mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fitq5 <- lm (y ~ x)
hatvalues(fitq5)
dfbeta(fitq5)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ wt + factor(cyl), data = mtcars)
lm(mpg ~  factor(cyl), data = mtcars)
pander(summary(lm(mp ~ factor(cyl), data=mtcars)))
pander(summary(lm(mpg ~ factor(cyl), data=mtcars)))
pander(summary(lm(mpg ~ wt + factor(cyl), data=mtcars)))
pander(summary(lm(mpg ~ wt, data=mtcars)))
fit1 <- lm(mpg ~ wt + factor(cyl), data=mtcars)
fit1 <- lm(mpg ~ wt, data=mtcars)
fit2 <- lm(mpg ~ wt, + factor(cyl), data=mtcars)
fit2 <- lm(mpg ~ wt + factor(cyl), data=mtcars)
anova(fit1, fit2)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
5/2
(30000 - 669)/300
300*60
97*60
/60
5820/60
30/60
(30000 - 669)/0.5
58662 / 60
300/60
(30000 - 669)/5
.7*60
97.77*1.6
97.77/1.6
.77960
.77*60
library (swirl)
swirl ()
skip()
sing apply(x1c, 1, mean)
apply(x1c, 1, mean)
fit1 <- lm (Fertility ~ Agriculture, swiss)
fit1 <- lm (Fertility ~ Agriculture + Examination + Education, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d < deviance (fit3)/43
d <- deviance (fit3)/43
n <- (deviance(fit1) - deviance (fit3))/2
n/d
pf (n/d, 2 43, lower.tail=FALSE)
pf (n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm (raveWinNum ~ ravenScore, family=binomial, ravenData)
skip ()
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary (mdl)
confint (mdl)
exp(confint (mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm (visits ~ date, poisson, hits)
summary (mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits [704,]
lambda <- mdl$fitted.values[704]
qpois (.95, lambda)
skip()
qpois(.95, mdl2$fitted.values[704])
library (Mass)
?shuttle
require (MASS)
data("shuttle")
dim(shuttle)
summary (shuttle)
lander <- glm(use ~ wind, binomial, shuttle)
summary (lander)
data ("InsectSprays")
summary (InsectSprays)
insect <- glm (count ~ spray, poisson, InsectSprays)
summary (insect)
lander_wing <- glm(wind ~ mang, binomial, shuttle)
lander_wing <- glm(wind ~ magn, binomial, shuttle)
summary (lander_wing)
lander_wing <- glm(wind ~ magn, binomial, shuttle)
x <- 5.5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
fit <- lm (x ~ y)
data(mtcars)
dim (mtcars)
library (pander)
names (mtcars)
pander (summary(mtcars[1:5]))
pander (summary(mtcars[10:11]))
str(mtcars)
mtcars$cyl <- as.factor(mtcars$cyl); mtcars$vs <- as.factor(mtcars$vs); mtcars$gear <- as.factor(mtcars$gear); mtcars$carb <- as.factor(mtcars$carb); mtcars$am <- as.factor(mtcars$am,labels=c('Automatic','Manual'))
mtcars$cyl <- as.factor(mtcars$cyl); mtcars$vs <- as.factor(mtcars$vs); mtcars$gear <- as.factor(mtcars$gear); mtcars$carb <- as.factor(mtcars$carb)
mtcars$am <- as.factor(mtcars$am,labels=c('Automatic','Manual'))
mtcars$am <- as.factor(mtcars$am,labels=c("Automatic","Manual"))
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
apply (mtcars[2:11], factor)
mtcars[2:10] <- as.factor(mtcars[2:10])
mtcars[,2:10] <- as.factor(mtcars[,2:10])
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
plot (mpg ~ am, mtcars)
quantile(mtcars$mpg)
quantile(mtcars$mpg$am)
fit1 <- lm (mpg ~ trans, mtcars)
fit1 <- lm (mpg ~ transm, mtcars)
data(mtcars)
library (dplyr)
mtcars$cyl <- factor(mtcars$cyl,labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs);
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5), labels=c("3gears","4gears","5gears"))
mtcars$carb <- factor(mtcars$carb)
mtcars <- rename (mtcars, transm = am)
mtcars$transm <- factor(mtcars$transm,labels=c("Automatic","Manual"))
fit1 <- lm (mpg ~ transm, mtcars)
library (pander)
pander (summary(fit1))
oxplot(mpg ~ transm, xlab="Transmission", ylab="MPG",
main="Boxplot of MPG vs. Transmission")
boxplot(mpg ~ transm, xlab="Transmission", ylab="MPG",
main="Boxplot of MPG vs. Transmission")
boxplot(mpg ~ transm, mtcars, xlab="Transmission", ylab="MPG",
main="Boxplot of MPG vs. Transmission")
boxplot(mpg ~ transm, xlab="Transmission", ylab="MPG",
main="Comparison of Miles per Gallong (MPG) by Type of Transmission")
boxplot(mpg ~ transm, mtcars, xlab="Transmission", ylab="MPG",
main="Comparison of Miles per Gallong (MPG) by Type of Transmission")
pairs(mtcars, panel=panel.smooth, main="Pair Graph of Motor Trend Car Road Tests")
t.test(mpg ~ transm, mtcars, paired=FALSE)
pander(t.test(mpg ~ transm, mtcars, paired=FALSE))
pander(t.test(mpg ~ transm, mtcars, paired=FALSE)$confint)
pander(t.test(mpg ~ transm, mtcars, paired=FALSE)$confint)
pander(t.test(mpg ~ transm, mtcars, paired=FALSE))$confint
intervals <- t.test(mpg ~ transm, mtcars, paired=FALSE))$confint
intervals <- t.test(mpg ~ transm, mtcars, paired=FALSE))$confint
intervals <- t.test(mpg ~ transm, mtcars, paired=FALSE)$confint
pander (intervals)
t.test(mpg ~ transm, mtcars, paired=FALSE)$p.value
cor(mtcars)[1,]
cor(as.numeric(mtcars)[1,])
cor(as.numeric(mtcars))[1,]
lm (mpg ~., mtcars)
summary (lm(mpg ~., mtcars))
library(ggplot2)
library(GGally)
pairsGG=mtcars[,c(1,2,3,4,6,9)]
ggpairs(pairsGG,lower = list(continuous="smooth",theme_set(theme_bw())),title="mtcars",colour = "am")
ggpairs(pairsGG,lower = list(continuous="smooth",theme_set(theme_bw())),title="mtcars",colour = "transm")
full.fit <- lm(mpg ~., mtcars)
best.fit <- step(full.fit, direction = "backward")
summary(best.fit)
pander(summary(best.fit))
data(mtcars)
str(mtcars)
library (dplyr)
mtcars <- rename (mtcars, transm = am)
mtcars$transm <- factor(mtcars$transm,labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs);
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5), labels=c("3gears","4gears","5gears"))
mtcars$carb <- factor(mtcars$carb)
boxplot(mpg ~ transm, mtcars, xlab="Transmission", ylab="MPG",
main="Fig 1: Comparison of Miles per Gallong (MPG) by Transmission")
library(pander)
pander(quantile(mtcars$mpg))
t.test(mpg ~ transm, mtcars, paired=FALSE)
fit <- lm (mpg ~ transm, mtcars)
pander (summary(fit))
setwd("C:/Users/Felix/Dropbox/Coursera/Data_Science_Specialization/GitHub/regression-models-prjt1")
citation()
